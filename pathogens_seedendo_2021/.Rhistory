mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
View(Oregon2017)
Oregon2017 %>%
group_by(Tree) %>%
summarise(count)
Oregon2017 %>%
group_by(Tree) %>%
summarise()
Idaho2017 %>%
group_by(Tree) %>%
summarise()
Idaho2018 %>%
group_by(Tree) %>%
summarise()
Idaho2017 %>%
group_by(Tree) %>%
summarise()
Idaho2018 %>%
group_by(Tree) %>%
summarise()
trees <- Idaho2018 %>%
group_by(Tree) %>%
summarise()
View(trees)
mydata <- read.csv("data/bac_fun_data.csv", header = T, as.is = T)
View(mydata)
Idaho2018.clear <- subset(mydata, Dataset == 'Idaho2018' & Tree != 'LOC')
Idaho2018.mos <- subset(mydata, Dataset == 'Idaho2018' & Tree == 'LOC')
View(Idaho2018.mos)
View(Idaho2018.clear)
trees <- Idaho2018 %>%
group_by(Tree) %>%
summarise()
library(tidyverse)
library(magrittr)
#library(RColorBrewer)
library(pals)
library(cowplot)
library(ggpubr)
#library(gridExtra)
#library(grid)
#library(png)
library(ggmap)
#library(ggrepel)
trees <- Idaho2018 %>%
group_by(Tree) %>%
summarise()
View(trees)
trees <- Idaho2018.clear %>%
group_by(Tree) %>%
summarise()
View(trees)
trees <- Idaho2018.clear %>%
group_by(Tree) %>%
summarise()
#### There were 0, 1, or 2 microbes isolated per seed (Oregon 2017, Idaho 2017 and 2018) ####
summary_data <- function(data){
data %>%
summarise(
zero_microbe = sum(Zero),
one_microbe = sum(One),
twoplus_microbes = sum(TwoPlus),
total_rows = length(Dataset)
)
}
microbes_perseed <- mydata %>%
group_by(Dataset) %>%
summary_data
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
#### Number of fungi and bacteria that were isolated and cooccured together in the same seed (Oregon 2017, Idaho 2017 and 2018) ####
fun_bac <- function(data){
data %>%
summarise(
fun = sum(Fungus),
bac = sum(Bacteria),
cooccur = sum(Fungus == 1 & Bacteria == 1),
total_rows = length(Dataset)
)
}
fun_bac_total <- mydata %>%
group_by(Dataset) %>%
fun_bac
fun_bac_percent <- fun_bac_total %>%
mutate(fun = fun/total_rows,
bac = bac/total_rows,
cooccur = cooccur/total_rows) %>%
select(!total_rows)
fun_morph<- function(data){
data %>%
summarise(
Clad = sum(Clad),
Alt = sum(Alt),
Aureo = sum(Aureo),
Epi = sum(Epicoccum),
Other = sum(Other_fungi)
)
}
View(fun_morph)
fun_total <- mydata %>%
group_by(Dataset) %>%
fun_morph() %>%
filter(!grepl('Oregon2017', Dataset)) %>%
rowwise %>%
mutate(fungi_total = sum(c_across(Clad:Other), na.rm=TRUE))
fun_percent <- fun_total %>%
mutate(Clad = Clad/fungi_total,
Alt = Alt/fungi_total,
Aureo = Aureo/fungi_total,
Epi = Epi/fungi_total,
Other = Other/fungi_total) %>%
select(!fungi_total)
#### Morphologically identified bacteria (Idaho 2017 and 2018) - No bacteria were isolated in Oregon 2017 ####
bac_morph<- function(data){
data %>%
summarise(
Pseudo = sum(Pseudo),
Other = sum(Other.Bacteria),
)
}
bac_total <- mydata %>%
group_by(Dataset) %>%
bac_morph() %>%
filter(!grepl('Oregon2017', Dataset)) %>%
rowwise %>%
mutate(bac_total = sum(c_across(Pseudo:Other), na.rm=TRUE))
bac_percent <- bac_total %>%
mutate(Pseudo = Pseudo/bac_total,
Other = Other/bac_total) %>%
select(!bac_total)
# Create new column with number of microbes
Idaho2018 %<>%
mutate(num_microbes = rowSums(.[10:11]))
# Create dataframe with seeds that only contains two microbes
microbesis2 <- Idaho2018 %>%
filter(num_microbes == 2) %>%
select(Bacteria, Fungus)
## 1 fungi + 1 bacteria = 60/76
microbesis2 %>%
filter(Bacteria == 1 & Fungus == 1) %>%
count()
## 2 bac = 5/76
microbesis2  %>%
filter(Bacteria == 2) %>%
count()
## 2 fungi = 11/76
microbesis2  %>%
filter(Fungus == 2) %>%
count()
obsfreq <- c(11, 5, 60)
nullprobs <- c(.333, .333, .334)
summary_data(Oregon2017)
View(microbes_perseed)
mydata %>%
mutate(paste(sampling_effort = "Dataset", "Location", sep = "_"))
mydata %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
mydata %>%
mutate(Location = replace(Location, Location != "Nez Perce", "Clearwater")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce", "Clearwater")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
#### Figure 1 - Map of sampling locations and native range of P. trichocarpa ####
pal.region <- c("#fb832d","#016392","#E7298A")
garden.coords <- data.frame(Labs=c("Westport, OR","Moscow, ID", "Clearwater, ID"),
Latitude=c(46.1326, 46.7324, 46.6776),
Longitude=c(-123.3748, -117.0002, -115.5620),
Year=c("2017","2017 and 2018", "2018"))
(map <-
get_map(location=c(left=-123.98,bottom=44,right=-112.29,top=50),
zoom=7, maptype = "watercolor",source="osm",force=F) %>%
ggmap()+
#geom_point(data=garden.coords,aes(x=Longitude,y=Latitude, fill = Year, shape=Year), solid=FALSE)+
geom_point(data=garden.coords,inherit.aes = F,aes(x=Longitude,y=Latitude, fill = Year, shape = Year),size=5,
show.legend = T)+
geom_label_repel(data=garden.coords,inherit.aes = F,aes(x=Longitude,y=Latitude,label=Labs),
point.padding = 0.5,box.padding = 0.6,size=5)+
scale_fill_manual(values=pal.region)+
scale_shape_manual(values=c(23,21, 22))+
labs(x="Longitude",y="Latitude")+
ggsn::scalebar(x.min = -116, x.max = -113.2,
y.min = 44.5, y.max = 45, dist = 100, dist_unit = "km", model = "WGS84", transform = TRUE, height = 0.3,
st.dist = 0.5,  st.size = 3)+
# theme_map()+
theme())
library(ggrepel)
(map <-
get_map(location=c(left=-123.98,bottom=44,right=-112.29,top=50),
zoom=7, maptype = "watercolor",source="osm",force=F) %>%
ggmap()+
#geom_point(data=garden.coords,aes(x=Longitude,y=Latitude, fill = Year, shape=Year), solid=FALSE)+
geom_point(data=garden.coords,inherit.aes = F,aes(x=Longitude,y=Latitude, fill = Year, shape = Year),size=5,
show.legend = T)+
geom_label_repel(data=garden.coords,inherit.aes = F,aes(x=Longitude,y=Latitude,label=Labs),
point.padding = 0.5,box.padding = 0.6,size=5)+
scale_fill_manual(values=pal.region)+
scale_shape_manual(values=c(23,21, 22))+
labs(x="Longitude",y="Latitude")+
ggsn::scalebar(x.min = -116, x.max = -113.2,
y.min = 44.5, y.max = 45, dist = 100, dist_unit = "km", model = "WGS84", transform = TRUE, height = 0.3,
st.dist = 0.5,  st.size = 3)+
# theme_map()+
theme())
#add inset figure
ggdraw()+
draw_plot(map)+
draw_image("data/range_map_inset.png",scale=1,width=0.25,x=0.59,y=0.28)
#save to file
#ggsave("figs/map_with_legend.jpg",width=20,height=16,units="cm")
ggsave("figs/fig1.tiff",width=10,height=7,units="in", device='tiff', dpi=300)
#library(gridExtra)
#library(grid)
library(png)
#save to file
#ggsave("figs/map_with_legend.jpg",width=20,height=16,units="cm")
ggsave("figs/fig1.tiff",width=10,height=7,units="in", device='tiff', dpi=300)
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce", "Clearwater")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
View(mydata_byloc)
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce[ ]", "Clearwater")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce ", "Clearwater")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce " | Location == "Nez Perce", "Clearwater")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
mydata <- read.csv("data/bac_fun_data.csv", header = T, as.is = T)
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce " | Location == "Nez Perce", "Moscow")) %>%
mutate(paste(sampling_effort = Dataset, Location, sep = "_"))
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce " | Location == "Nez Perce", "Moscow")) %>%
mutate(sampling_effort_location = paste(Dataset, Location, sep = "_"))
mydata <- read.csv("data/bac_fun_data.csv", header = T, as.is = T)
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce " | Location == "Nez Perce", "Moscow")) %>%
mutate(sampling_effort_location = paste(Dataset, Location, sep = "_"))
Oregon2017 <- subset(mydata, sampling_effort_location == 'Oregon2017_Westport')
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce " | Location == "Nez Perce", "Moscow")) %>%
mutate(sampling_effort_location = paste(Dataset, Location, sep = "_"))
Oregon2017 <- subset(mydata, sampling_effort_location == 'Oregon2017_Westport')
Oregon2017 <- subset(mydata_byloc, sampling_effort_location == 'Oregon2017_Westport')
Idaho2017 <- subset(mydata_byloc, sampling_effort_location == 'Idaho2017_Moscow')
Idaho2018.clear <- subset(mydata_byloc, sampling_effort_location == 'Idaho2018_Clearwater')
Idaho2018.mos <- subset(mydata_byloc, sampling_effort_location == 'Idaho2018_Moscow')
trees <- Idaho2018.clear %>%
group_by(Tree) %>%
summarise()
#### There were 0, 1, or 2 microbes isolated per seed (Oregon 2017, Idaho 2017 and 2018) ####
summary_data <- function(data){
data %>%
summarise(
zero_microbe = sum(Zero),
one_microbe = sum(One),
twoplus_microbes = sum(TwoPlus),
total_rows = length(Dataset)
)
}
microbes_perseed <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
summary_data
View(microbes_perseed)
microbes_perseed <- mydata %>%
group_by(Dataset) %>%
summary_data
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
View(microbes_perseed_percent)
View(microbes_perseed)
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
View(microbes_perseed_percent)
#### There were 0, 1, or 2 microbes isolated per seed (Oregon 2017, Idaho 2017 and 2018) ####
summary_data <- function(data){
data %>%
summarise(
zero_microbe = sum(Zero),
one_microbe = sum(One),
twoplus_microbes = sum(TwoPlus),
total_rows = length(Dataset)
)
}
microbes_perseed <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
summary_data
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
View(microbes_perseed_percent)
View(microbes_perseed)
View(microbes_perseed_percent)
microbes_perseed
#### Number of fungi and bacteria that were isolated and cooccured together in the same seed (Oregon 2017, Idaho 2017 and 2018) ####
fun_bac <- function(data){
data %>%
summarise(
fun = sum(Fungus),
bac = sum(Bacteria),
cooccur = sum(Fungus == 1 & Bacteria == 1),
total_rows = length(Dataset)
)
}
fun_bac_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_bac
fun_bac_total
fun_bac_percent
fun_bac_percent <- fun_bac_total %>%
mutate(fun = fun/total_rows,
bac = bac/total_rows,
cooccur = cooccur/total_rows) %>%
select(!total_rows)
fun_bac_total
fun_bac_percent
microbes_perseed
microbes_perseed_percent
fun_morph<- function(data){
data %>%
summarise(
Clad = sum(Clad),
Alt = sum(Alt),
Aureo = sum(Aureo),
Epi = sum(Epicoccum),
Other = sum(Other_fungi)
)
}
fun_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_morph()
View(fun_total)
fun_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_morph() %>%
filter(!grepl('Oregon2017', Dataset)) %>%
rowwise %>%
mutate(fungi_total = sum(c_across(Clad:Other), na.rm=TRUE))
fun_morph<- function(data){
data %>%
summarise(
Clad = sum(Clad),
Alt = sum(Alt),
Aureo = sum(Aureo),
Epi = sum(Epicoccum),
Other = sum(Other_fungi)
)
}
fun_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_morph() %>%
filter(!grepl('Oregon2017', Dataset)) %>%
rowwise %>%
mutate(fungi_total = sum(c_across(Clad:Other), na.rm=TRUE))
mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_morph() %>%
filter(!grepl('Oregon2017', Dataset))
mydata <- read.csv("data/bac_fun_data.csv", header = T, as.is = T)
Oregon2017 <- subset(mydata, Dataset == 'Oregon2017')
Idaho2017 <- subset(mydata, Dataset == 'Idaho2017')
Idaho2018 <- subset(mydata, Dataset == 'Idaho2018')
trees <- Idaho2018 %>%
group_by(Tree) %>%
summarise()
#### There were 0, 1, or 2 microbes isolated per seed (Oregon 2017, Idaho 2017 and 2018) ####
summary_data <- function(data){
data %>%
summarise(
zero_microbe = sum(Zero),
one_microbe = sum(One),
twoplus_microbes = sum(TwoPlus),
total_rows = length(Dataset)
)
}
microbes_perseed <- mydata %>%
group_by(Dataset) %>%
summary_data
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
microbes_perseed
microbes_perseed_percent
#### Number of fungi and bacteria that were isolated and cooccured together in the same seed (Oregon 2017, Idaho 2017 and 2018) ####
fun_bac <- function(data){
data %>%
summarise(
fun = sum(Fungus),
bac = sum(Bacteria),
cooccur = sum(Fungus == 1 & Bacteria == 1),
total_rows = length(Dataset)
)
}
fun_bac_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_bac
fun_bac_percent <- fun_bac_total %>%
mutate(fun = fun/total_rows,
bac = bac/total_rows,
cooccur = cooccur/total_rows) %>%
select(!total_rows)
fun_bac_total
fun_bac_percent
#### Morphologically identified fungi (Idaho 2017 and 2018) ####
fun_morph<- function(data){
data %>%
summarise(
Clad = sum(Clad),
Alt = sum(Alt),
Aureo = sum(Aureo),
Epi = sum(Epicoccum),
Other = sum(Other_fungi)
)
}
fun_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_morph() %>%
filter(!grepl('Oregon2017', Dataset)) %>%
rowwise %>%
mutate(fungi_total = sum(c_across(Clad:Other), na.rm=TRUE))
fun_total <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
fun_morph() %>%
filter(!grepl('Oregon2017', sampling_effort_location)) %>%
rowwise %>%
mutate(fungi_total = sum(c_across(Clad:Other), na.rm=TRUE))
View(fun_total)
fun_percent <- fun_total %>%
mutate(Clad = Clad/fungi_total,
Alt = Alt/fungi_total,
Aureo = Aureo/fungi_total,
Epi = Epi/fungi_total,
Other = Other/fungi_total) %>%
select(!fungi_total)
fun_total
fun_percent
microbes_perseed
microbes_perseed_percent
microbes_perseed
#### There were 0, 1, or 2 microbes isolated per seed (Oregon 2017, Idaho 2017 and 2018) ####
summary_data <- function(data){
data %>%
summarise(
zero_microbe = sum(Zero),
one_microbe = sum(One),
twoplus_microbes = sum(TwoPlus),
total_rows = length(Dataset)
)
}
microbes_perseed <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
summary_data
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
microbes_perseed
microbes_perseed_percent
mydata <- read.csv("data/bac_fun_data_resub.csv", header = T, as.is = T)
mydata_byloc <- mydata %>%
mutate(Location = replace(Location, Location == "Nez Perce " | Location == "Nez Perce", "Moscow")) %>%
mutate(sampling_effort_location = paste(Dataset, Location, sep = "_"))
Oregon2017 <- subset(mydata_byloc, sampling_effort_location == 'Oregon2017_Westport')
Idaho2017 <- subset(mydata_byloc, sampling_effort_location == 'Idaho2017_Moscow')
Idaho2018.clear <- subset(mydata_byloc, sampling_effort_location == 'Idaho2018_Clearwater')
Idaho2018.mos <- subset(mydata_byloc, sampling_effort_location == 'Idaho2018_Moscow')
trees <- Idaho2018.clear %>%
group_by(Tree) %>%
summarise()
#### There were 0, 1, or 2 microbes isolated per seed (Oregon 2017, Idaho 2017 and 2018) ####
summary_data <- function(data){
data %>%
summarise(
zero_microbe = sum(Zero),
one_microbe = sum(One),
twoplus_microbes = sum(TwoPlus),
total_rows = length(Dataset)
)
}
microbes_perseed <- mydata_byloc %>%
group_by(sampling_effort_location) %>%
summary_data
microbes_perseed_percent <- microbes_perseed %>%
mutate(zero_microbe = zero_microbe/total_rows,
one_microbe = one_microbe/total_rows,
twoplus_microbes = twoplus_microbes/total_rows) %>%
select(!total_rows)
microbes_perseed
microbes_perseed_percent
fun_bac_total
fun_bac_percent
View(mort)
